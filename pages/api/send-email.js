import nodemailer from 'nodemailer';

const transporter = nodemailer.createTransport({
  host: process.env.EMAIL_HOST,
  port: process.env.EMAIL_PORT,
  secure: false,
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS,
  },
});

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const { recipients, subject, message, summary, priority } = req.body;

    if (!recipients || !Array.isArray(recipients) || recipients.length === 0) {
      return res.status(400).json({ error: 'Recipients are required' });
    }

    if (!summary) {
      return res.status(400).json({ error: 'Summary is required' });
    }

    const emailContent = `${message}\n\n${'='.repeat(50)}\nMEETING SUMMARY\n${'='.repeat(50)}\n\n${summary}\n\n${'='.repeat(50)}\n\nThis summary was generated using AI Meeting Notes Summarizer.\nGenerated on: ${new Date().toLocaleString()}`;

    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: recipients,
      subject: subject || 'Meeting Summary',
      text: emailContent,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto;">
          <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
            <h2 style="color: #333; margin: 0;">Meeting Summary</h2>
            <p style="color: #666; margin: 5px 0 0 0;">Generated on ${new Date().toLocaleString()}</p>
          </div>
          
          ${message ? `<div style="margin-bottom: 20px; padding: 15px; background-color: #e9ecef; border-radius: 5px;">
            <p style="margin: 0; white-space: pre-line;">${message}</p>
          </div>` : ''}
          
          <div style="border: 1px solid #dee2e6; border-radius: 5px; overflow: hidden;">
            <div style="background-color: #6c757d; color: white; padding: 15px;">
              <h3 style="margin: 0; font-size: 18px;">üìù Meeting Summary</h3>
            </div>
            <div style="padding: 20px; background-color: white;">
              <div style="white-space: pre-line; line-height: 1.6;">${summary}</div>
            </div>
          </div>
          
          <div style="margin-top: 30px; padding: 15px; background-color: #f8f9fa; border-radius: 5px; text-align: center;">
            <p style="margin: 0; color: #6c757d; font-size: 12px;">
              Generated by AI Meeting Notes Summarizer
            </p>
          </div>
        </div>
      `,
      priority: priority || 'normal',
    };

    const results = await transporter.sendMail(mailOptions);
    
    res.status(200).json({ 
      success: true, 
      message: `Email sent successfully to ${recipients.length} recipient(s)`,
      messageId: results.messageId 
    });
  } catch (error) {
    console.error('Email sending error:', error);
    res.status(500).json({ 
      error: error.message || 'Failed to send email' 
    });
  }
}